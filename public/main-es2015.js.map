{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  editorForm: FormGroup;\n  editorContent: string;\n\n  editorStyle = {\n    height: '300px'\n\n  }\n\n  config = {\n    \n    \n  }\n\n  ngOnInit() {\n    this.editorForm = new FormGroup({\n      'editor': new FormControl(null)\n    })\n  }\n\n  onSubmit() {\n    this.editorContent = this.editorForm.get('editor').value;\n    console.log(this.editorForm.get('editor').value);\n  }\n\n  maxLength(e){\n    if(e.editor.getLength() > 500){\n      e.editor.deleteText(500, e.editor.getLength());\n    }\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <a class=\"navbar-brand ml-auto mr-auto\" href=\"#\">Quill Js editor with angular</a>\r\n</nav>\r\n\r\n<div class=\"container\">\r\n    <div class=\"row pt-5\">\r\n        <div class=\"col-md-8 bg-light\">\r\n            <form [formGroup]=\"editorForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"editor\"><h3>Editor</h3></label>\r\n\r\n                      <quill-editor [styles]=\"editorStyle\" [modules]=\"config\" (onContentChanged)=\"maxLength($event)\" formControlName=\"editor\"></quill-editor>\r\n                      <span *ngIf=\"editorForm.get('editor').value!=null\">{{ editorForm.get('editor').value.length - 507 }}</span>\r\n                </div>\r\n\r\n                <button class=\"btn btn-primary mt-3\">Submit</button>\r\n    \r\n            </form>\r\n        </div>\r\n        <div class=\"col-md-4 bg-light p-4\">\r\n            <h3>Output</h3>\r\n            <p class=\"my-5\" [innerHTML]=\"editorContent\"></p>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n    \r\n        \r\n   \r\n\r\n\r\n     ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n\n\nimport{QuillModule} from 'ngx-quill';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    QuillModule.forRoot(),\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}