{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","editorStyle","height","config","editorForm","editorContent","get","value","console","log","editor","getLength","deleteText","onSubmit","maxLength","selector","templateUrl","styleUrls","AppModule","forRoot","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  editorForm: FormGroup;\n  editorContent: string;\n\n  editorStyle = {\n    height: '300px'\n\n  }\n\n  config = {\n    \n    \n  }\n\n  ngOnInit() {\n    this.editorForm = new FormGroup({\n      'editor': new FormControl(null)\n    })\n  }\n\n  onSubmit() {\n    this.editorContent = this.editorForm.get('editor').value;\n    console.log(this.editorForm.get('editor').value);\n  }\n\n  maxLength(e){\n    if(e.editor.getLength() > 500){\n      e.editor.deleteText(500, e.editor.getLength());\n    }\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <a class=\"navbar-brand ml-auto mr-auto\" href=\"#\">Quill Js editor with angular</a>\r\n</nav>\r\n\r\n<div class=\"container\">\r\n    <div class=\"row pt-5\">\r\n        <div class=\"col-md-8 bg-light\">\r\n            <form [formGroup]=\"editorForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"editor\"><h3>Editor</h3></label>\r\n\r\n                      <quill-editor [styles]=\"editorStyle\" [modules]=\"config\" (onContentChanged)=\"maxLength($event)\" formControlName=\"editor\"></quill-editor>\r\n                      <span *ngIf=\"editorForm.get('editor').value!=null\">{{ editorForm.get('editor').value.length - 507 }}</span>\r\n                </div>\r\n\r\n                <button class=\"btn btn-primary mt-3\">Submit</button>\r\n    \r\n            </form>\r\n        </div>\r\n        <div class=\"col-md-4 bg-light p-4\">\r\n            <h3>Output</h3>\r\n            <p class=\"my-5\" [innerHTML]=\"editorContent\"></p>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n    \r\n        \r\n   \r\n\r\n\r\n     ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n\n\nimport{QuillModule} from 'ngx-quill';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    QuillModule.forRoot(),\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}